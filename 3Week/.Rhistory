#setwd("C:\\woodystudio\\R\\DSF2022\\week3\\") #디렉토리 설정
weight_height <- read.csv("C:/Users/cksgo/Documents/weight_height.csv") #csv파일 읽어오기
male_wh_us <- weight_height[weight_height$Gender=="Male",] #Male만 추출
female_wh_us <- weight_height[weight_height$Gender=="Female",] #Female만 추출
#inch를 cm로, lb를 kg로 변경
male_wh <- data.frame(Gender=male_wh_us[,1], Height_cm=male_wh_us[,2]*2.54, Weight_kg=male_wh_us[,3]*0.453592)
female_wh <- data.frame(Gender=female_wh_us[,1], Height_cm=female_wh_us[,2]*2.54, Weight_kg=female_wh_us[,3]*0.453592)
#head()를 이용하여 잘 변경되었는지 확인
head(male_wh)
head(female_wh)
#결측값이 있는지 확인
table(is.na(male_wh))
table(is.na(female_wh))
#setwd("C:\\woodystudio\\R\\DSF2022\\week3\\") #디렉토리 설정
weight_height <- read.csv("C:/Users/cksgo/Documents/weight_height.csv") #csv파일 읽어오기
male_wh_us <- weight_height[weight_height$Gender=="Male",] #Male만 추출
female_wh_us <- weight_height[weight_height$Gender=="Female",] #Female만 추출
#inch를 cm로, lb를 kg로 변경
male_wh <- data.frame(Gender=male_wh_us[,1], Height_cm=male_wh_us[,2]*2.54, Weight_kg=male_wh_us[,3]*0.453592)
female_wh <- data.frame(Gender=female_wh_us[,1], Height_cm=female_wh_us[,2]*2.54, Weight_kg=female_wh_us[,3]*0.453592)
#head()를 이용하여 잘 변경되었는지 확인
head(male_wh)
head(female_wh)
#결측값이 있는지 확인
table(is.na(male_wh))
table(is.na(female_wh))
#데이터 요약 통계랑 출력
summary(male_wh)
summary(female_wh)
#데이터 표준편자 확인
sd(male_wh$Height_cm)
sd(male_wh$Weight_kg)
sd(female_wh$Height_cm)
sd(female_wh$Weight_kg)
#극단치 확인
#극단치를 제거할 것인가?
b1 <- boxplot(male_wh$Height_cm)$stats
b2 <- boxplot(male_wh$Weight_kg)$stats
b3 <- boxplot(female_wh$Height_cm)$stats
b4 <- boxplot(female_wh$Weight_kg)$stats
#극단치 범위에 포함되는 데이터 개수 파악
table(male_wh$Height_cm < b1[1,])
table(male_wh$Height_cm > b1[5,])
table(male_wh$Weight_kg < b2[1,])
table(male_wh$Weight_kg > b2[5,])
table(female_wh$Height_cm < b3[1,])
table(female_wh$Height_cm > b3[5,])
table(female_wh$Weight_kg < b4[1,])
table(female_wh$Weight_kg > b4[5,])
#극단치 제거
male_wh$Height_cm <- ifelse(male_wh$Height_cm < b1[1,] | male_wh$Height_cm > b1[5,], NA, male_wh$Height_cm)
male_wh$Weight_kg <- ifelse(male_wh$Weight_kg < b2[1,] | male_wh$Weight_kg > b2[5,], NA, male_wh$Weight_kg)
female_wh$Height_cm <- ifelse(female_wh$Height_cm < b3[1,] | female_wh$Height_cm > b3[5,], NA, female_wh$Height_cm)
female_wh$Weight_kg <- ifelse(female_wh$Weight_kg < b4[1,] | female_wh$Weight_kg > b4[5,], NA, female_wh$Weight_kg)
male_wh_ev <- na.omit(male_wh)
female_wh_ev <- na.omit(female_wh)
#극단치를 제거한 데이터의 요약 통계량 출력
summary(male_wh_ev)
summary(female_wh_ev)
#극단치를 제거한 데이터 표준편자 확인
sd(male_wh_ev$Height_cm)
sd(male_wh_ev$Weight_kg)
sd(female_wh_ev$Height_cm)
sd(female_wh_ev$Weight_kg)
#남성의 키/몸무게 상관관계 확인
cor(male_wh_ev$Height_cm, male_wh_ev$Weight_kg, method = "pearson")
#여성의 키/몸무게 상관관계 확인
cor(female_wh_ev$Height_cm, female_wh_ev$Weight_kg, method = "pearson")
#남성의 키-몸무게 상관관계 그래프 및 추세선
plot(Weight_kg ~ Height_cm, data = male_wh_ev, xlab = "키(cm)", ylab = "몸무게(kg)")
abline(lm(Weight_kg ~ Height_cm, data = male_wh_ev), col = "blue", lwd = 3)
#여성의 키-몸무게 상관관계 그래프 및 추세선
plot(Weight_kg ~ Height_cm, data = female_wh_ev, xlab = "키(cm)", ylab = "몸무게(kg)")
abline(lm(Weight_kg ~ Height_cm, data = female_wh_ev), col = "red", lwd = 3)
#남/여 키 데이터만 추출하여 각각 저장
male_height <- male_wh_ev[,2]
female_height <- female_wh_ev[,2]
#히스토그램 x축 범위 설정
#0.1cm단위로 자르니 가시성이 떨어져 1cm단위로 설정
x_range = seq(140,200,by=1)
#남/여 키를 따로 히스토그램에 저장
male_height_hist = hist(male_height, breaks=x_range, plot = FALSE)
female_height_hist = hist(female_height, breaks=x_range, plot = FALSE)
#y축 범위 설정을 위한 최대 빈도수 파악
y_max = max(max(male_height_hist$counts), max(female_height_hist$counts))
#plot함수를 이용하여 히스토그램 그리기
plot(male_height_hist, col = adjustcolor("blue",alpha = 0.3), ann = FALSE, axes = FALSE, ylim = c(0,y_max))
plot(female_height_hist, col = adjustcolor("red", alpha = 0.3), add = TRUE)
title(xlab="Height(cm)", ylab="Frequncy")
#x축 눈금 추가
axis(side=1,at=seq(140,200,1))
#y축 눈금 추가
axis(side=2,at=seq(0,500,10))
#범례 설정
legend("topright",c("male","female"),fill=c("blue","red"))
#키 기반 예측모델 생성 function name : height_guess
height_guess <- function(x){
if (x>=169){
return("Male")
}
else{
return("Female")
}
}
library(dplyr)
library(tidyverse)
dataset <- read.csv("C:/Users/cksgoDocuments/weight_height.csv")
tc <- as_tibble(dataset)
tc1 <- data.frame(Gender = as.factor(tc$Gender),
Height = tc$Height,
weight = tc$Weight
)
#전체 키의 평균 및 표준편차
apply(matrix(tc1$Height),2,mean)
apply(matrix(tc1$Height),2,sd)
tm <- tc1[tc1$Gender=="Male",]
tf <- tc1[tc1$Gender=="Female",]
dataset <- read.csv("C:/Users/cksgoDocuments/weight_height.csv")
tc <- as_tibble(dataset)
dataset <- read.csv("C:/Users/cksgo/Documents/weight_height.csv")
tc <- as_tibble(dataset)
tc1 <- data.frame(Gender = as.factor(tc$Gender),
Height = tc$Height,
weight = tc$Weight
)
#전체 키의 평균 및 표준편차
apply(matrix(tc1$Height),2,mean)
apply(matrix(tc1$Height),2,sd)
tm <- tc1[tc1$Gender=="Male",]
tf <- tc1[tc1$Gender=="Female",]
#남자 키, 몸무게의 평균 및 표준편차
apply(matrix(tm$Height),2,mean)
apply(matrix(tm$Height),2,sd)
apply(matrix(tm$weight),2,mean)
apply(matrix(tm$weight),2,sd)
#여자 키, 몸무게의 평균 및 표준편차
apply(matrix(tf$Height),2,mean)
apply(matrix(tf$Height),2,sd)
apply(matrix(tf$weight),2,mean)
apply(matrix(tf$weight),2,sd)
#남녀 각각 데이터 개수 동일
count(tf)
count(tm)
#남, 녀 각각 전체 상관계수
p1 <- ggplot(tm, aes(x = Height)) +
geom_histogram(binwidth = 2,color="black", fill="blue")
p2 <- ggplot(tf, aes(x = Height)) +
geom_histogram(binwidth = 2,color="black", fill="red")
p1
p2
#키에 관한 그래프프
ggplot () +
geom_histogram(data = tm,aes(x=Height),fill="blue",alpha=.3,bins = 50) +
geom_histogram(data = tf,aes(x=Height),fill="red",alpha=.3,bins = 50) +
geom_vline(aes(xintercept = mean(tm$Height)),
color="blue", linetype="dashed", size=1) +
geom_vline(aes(xintercept = mean(tf$Height)),
color="red", linetype="dashed", size=1)
#몸무게에 관한 그래프
ggplot () +
geom_histogram(data = tm,aes(x=weight),fill="blue",alpha=.3,bins = 50) +
geom_histogram(data = tf,aes(x=weight),fill="red",alpha=.3,bins = 50) +
geom_vline(aes(xintercept = mean(tm$weight)),
color="blue", linetype="dashed", size=1) +
geom_vline(aes(xintercept = mean(tf$weight)),
color="red", linetype="dashed", size=1)
#키의 cut off 구하기
meanresult = 10000;meanheight = 0
for(i in 1:(max(tc1$Height))){
#mean보다 여자 키가 클때 error1
error1cnt = count(tm[tf$Height>i,])
#mean보다 남자 키가 작을때 error2
error2cnt = count(tm[tm$Height<i,])
if (error1cnt+error2cnt < meanresult){
meanresult = error1cnt+error2cnt
meanheight = i
}
}
meanheight
meanresult #최소 에러 갯수
#몸무게의 cut off 구하기
meanweightresult = 10000;meanweight = 0
for(i in 1:(max(tc1$weight))){
#mean보다 여자 키가 클때 error1
error1cnt = count(tm[tf$weight>i,])
#mean보다 남자 키가 작을때 error2
error2cnt = count(tm[tm$weight<i,])
if (error1cnt+error2cnt < meanweightresult){
meanweightresult = error1cnt+error2cnt
meanweight = i
}
}
meanweight
meanweightresult
#cut off를 구한 키 그래프
ggplot () +
geom_histogram(data = tm,aes(x=Height),fill="blue",alpha=.3,bins = 50) +
geom_histogram(data = tf,aes(x=Height),fill="red",alpha=.3,bins = 50) +
geom_vline(aes(xintercept = meanheight),
color="black", linetype="dashed", size=1)
#cut off를 구한 몸무게 그래프
ggplot () +
geom_histogram(data = tm,aes(x=weight),fill="blue",alpha=.3,bins = 50) +
geom_histogram(data = tf,aes(x=weight),fill="red",alpha=.3,bins = 50) +
geom_vline(aes(xintercept = meanweight),
color="black", linetype="dashed", size=1)
#cut off를 구한 키 그래프
ggplot () +
geom_histogram(data = tm,aes(x=Height),fill="blue",alpha=.3,bins = 50) +
geom_histogram(data = tf,aes(x=Height),fill="red",alpha=.3,bins = 50) +
geom_vline(aes(xintercept = meanheight),
color="black", linetype="dashed", size=1)
#cut off를 구한 몸무게 그래프
ggplot () +
geom_histogram(data = tm,aes(x=weight),fill="blue",alpha=.3,bins = 50) +
geom_histogram(data = tf,aes(x=weight),fill="red",alpha=.3,bins = 50) +
geom_vline(aes(xintercept = meanweight),
color="black", linetype="dashed", size=1)
library(ggplot2)
ggplot() +
geom_point()
ggplot() +
geom_point(data = tm,aes(x=Height,y=weight),color="blue",alpha=.2)+
geom_point(data = tf,aes(x=Height,y=weight),color="red",alpha=.2)
ggplot() +
geom_point(data = tm,aes(x=Height,y=weight),color="blue",alpha=.2)+
geom_smooth(method = "lm",formula = y~splines::ns(x, 2)) +
geom_point(data = tf,aes(x=Height,y=weight),color="red",alpha=.2)+
#geom_abline(slope = slope,intercept = int) +
geom_smooth(data = tf,aes(x=Height,y=weight),color="red",method = "lm",formula = y~x)+
geom_vline(aes(xintercept = meanheight),
color="black", linetype="dashed", size=1)+
geom_hline(yintercept = meanweight)
ggplot() + geom_point(mapping = aes(x=Height_cm, y=Weight_kg), data = male_wh_ev, col="blue", alpha = 0.5) + geom_point(mapping = aes(x=Height_cm, y=Weight_kg), data = female_wh_ev, col="red", alpha = 0.5) + geom_abline(intercept=90, slope=-0.1)
